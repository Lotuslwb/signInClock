<%- include("header.ejs",{"title":'参赛篇目'}) %>

<div class='page recode-page active'>
    <div class="title">
        <%- doc.arName %>
    </div>
    <img src="/ximalaya/img/origin-play.png" class="J-music origin-play" />
    <div class="content">
        <%- doc.arText %>
    </div>
    <div class="actions">
        <div class="action recode-action">
            <img class="action-img" src="/ximalaya/img/record-btn.png">
            <div class="action-txt"> 录音(1分钟内)</div>
        </div>
        <div class="action playing-action">
            <img class="action-img" src="/ximalaya/img/palying-btn.png">
            <div class="action-txt red"> 录音中 <span class="timer J-timer">60</span>s</div>
        </div>
        <img src="/ximalaya/img/replay-btn.png" class="action action-group replay-action">
        <img src="/ximalaya/img/again-record-btn.png" class="action action-group bw again-action">
        <img src="/ximalaya/img/record-submit-btn.png" class="action action-group submit-action">
    </div>
    <div class="musicUrl" data-src="<%= doc.arRecord %>"></div>
</div>



<!-- <script src="/xmjssdk/vconsole.min.js?v=16"></script>
<script>
    var vConsole = new VConsole();
</script> -->
<!-- 图片上传 -->
<!-- <input type="file" id="file"> -->
<script src="/javascripts/qiniu.min.js"></script>
<script>
    var token;
    $.ajax({
        type: 'get',
        url: '/qiniu/api/getToken',
        success: function (data) {
            if (data.status == 200) {
                token = data.data.uploadToken;
                console.log(token);
            } else {
                window.mPZ.toast(data.data);
            }
        },
        dataType: 'json'
    });
    $('#file').change(function (e) {
        var file = this.files[0]; //获取图片
        console.log(file);
        var observable = qiniu.upload(file, new Date() * 1, token, {}, {
            useCdnDomain: false,
            region: qiniu.region.z0
        })
        var subscription = observable.subscribe({
            next(res) {
                console.log(res);
            },
            error(err) {
                console.log(err);
            },
            complete(res) {
                console.log(res, 'complete');
            }
        }) // 上传开始
    })
</script>

<script>
    function tips(msg) {
        console.log(msg);
    }
    var productName = '<%- doc.arName %>';

    function Page() {
        this.init();
        this.initMusic();
        this.bindEvent();
    }
    Page.prototype = {
        init: function () {
            var self = this;
            // 录音状态控制
            self.recordStatusCode = {
                READY: 'READY', // 准备
                RECORDING: 'RECORDING', // 录音中
                PAUSED: 'PAUSED', // 暂停录音
                STOP: 'STOP', // 停止录音
                PLAYING: 'PLAYING', // 播放
                PLAYPAUSED: 'PLAYPAUSED', // 暂停播放
                PALYSTOP: 'PALYSTOP', // 播放停止
                ERROR: 'ERROR' // 错误
            };
            self.initYa(function () {
                // 必须登录喜马拉雅才可以使用
                ya.login(function (res) {
                    console.log(res);
                    self.YaBindEvent();
                    self.recordStatusChange(self.recordStatusCode.READY);
                    try {
                        ya.recorder.stopRecord();
                    } catch (error) {}
                });
            });
        },
        bindEvent: function () {
            var self = this;
            $('.J-music').click(function (e) {
                if ($(this).hasClass('play')) {
                    self.stopMusic();
                } else {
                    self.playMusic();
                }
            })
        },
        initMusic: function () {
            var audioElement = this.audioElement = document.createElement('audio');
            audioElement.controls = true;
            audioElement.loop = false;
            audioElement.autoplay = false;
            audioElement.onended = function () {
                $('.J-music').removeClass('play');
            };

            var src = $('.musicUrl').data('src');
            audioElement.setAttribute('src', src);
            audioElement.load();
        },
        playMusic: function () {
            this.audioElement.play();
            $('.J-music').addClass('play');
        },
        stopMusic: function () {
            this.audioElement.pause();
            $('.J-music').removeClass('play');
        },
        YaBindEvent: function () {
            var self = this;
            $('.recode-action').click(function () {
                self.recordStatusChange(self.recordStatusCode.RECORDING);
            });
            $('.playing-action').click(function () {
                self.recordStatusChange(self.recordStatusCode.STOP);
            });
            $('.replay-action').click(function () {
                console.log(self.recordStatus, 'replay-action');
                if (self.recordStatus == self.recordStatusCode.PLAYING) {
                    self.recordStatusChange(self.recordStatusCode.PALYSTOP);
                } else {
                    self.recordStatusChange(self.recordStatusCode.PLAYING);
                }
            })
            $('.again-action').click(function () {
                // 先停止播放
                self.recordStatusChange(self.recordStatusCode.PALYSTOP);
                self.recordStatusChange(self.recordStatusCode.READY);
            })

            $('.submit-action').click(function () {
                // 先停止播放
                self.recordStatusChange(self.recordStatusCode.PALYSTOP);
                console.log(self.localId);
                ya.recorder.uploadVoice(self.localId, function (res) {
                    console.log(res);
                    var obj = JSON.parse(res);
                    // 客户端上传
                    if (obj.ret == 0) {
                        var url = obj.data.url;
                        // 服务器处理
                        $.ajax({
                            type: 'post',
                            url: '/ximalaya/api/saveAudio',
                            data: {
                                url: url,
                                productName: productName,
                            },
                            success: function (data) {
                                if (data.status == '200') {
                                    var recordId = data.data._id;
                                    console.log(recordId);
                                    window.location.href =
                                        '/ximalaya/result?recordId=' + recordId;
                                } else {
                                    console.log(data);
                                }
                            },
                            dataType: 'json'
                        });
                        console.log('成功', obj.data.url);
                    } else {
                        ya.toast('音频上传失败' + JSON.stringify(obj));
                        console.log('失败：', obj);
                    }
                });
            })
        },
        initYa: function (cb) {
            var self = this;
            ya.ready(function () {
                self.recordCallbacks();
                cb && cb();
            });
        },
        recordStatusChange: function (recordStatus) {
            var self = this;
            var recordStatusCode = self.recordStatusCode;
            switch (recordStatus) {
                case recordStatusCode.READY:
                    $('.recode-action').show().siblings().hide();
                    self.recordStatus = recordStatus;
                    break;
                case recordStatusCode.RECORDING:
                    self.stopMusic();
                    ya.recorder.startRecord(function () {
                        ya.toast('开始录音：');
                        $('.playing-action').show().siblings().hide();
                        self.startTimer(function () {
                            self.recordStatusChange(recordStatusCode.STOP)
                        })
                        self.recordStatus = recordStatus;
                    });
                    break;
                case recordStatusCode.PLAYING:
                    self.stopMusic();
                    if (!self.localId) {
                        ya.toast('请先录制一段音频！');
                        return false;
                    }
                    ya.recorder.playVoice(self.localId, function (localId) {
                        self.recordStatus = recordStatus;
                        console.log(self.recordStatus);
                        $('.replay-action').attr('src', '/ximalaya/img/replay-btn-2.png');
                    });
                    break;
                case recordStatusCode.PALYSTOP:
                    ya.recorder.stopVoice(self.localId, function (localId) {
                        self.recordStatus = recordStatus;
                    });
                    break;
                case recordStatusCode.STOP:
                    self.stopTimer();
                    ya.recorder.stopRecord(function (localId) {
                        self.recordStatus = recordStatus;
                        self.localId = localId;
                        $('.action').hide();
                        $('.action-group').show();
                    });
                    break;
            }
        },
        recordCallbacks: function () {
            var self = this;
            ya.recorder.bind({
                onAudioStatusChange: function (obj) {
                    tips('音频状态改变' + JSON.stringify(obj));
                },
                onRecordStart: function (milliseconds) {
                    tips('录音开始:' + milliseconds);
                },
                onRecording: function (milliseconds) {
                    // 避免用toast，会产生toast延迟
                    // ya.toast();
                    tips('录音中:' + milliseconds);
                },
                onRecordPause: function (milliseconds) {
                    tips('录音暂停:' + milliseconds);
                },
                onRecordResume: function (milliseconds) {
                    tips('录音恢复:' + milliseconds);
                },
                onRecordEnd: function (obj) {
                    $('.action').hide();
                    $('.action-group').show();
                    tips('录音结束:' + JSON.stringify(obj));
                },
                onPlayStart: function (obj) {
                    tips('播放开始:' + JSON.stringify(obj));
                },
                onPlaying: function (obj) {
                    // 避免用toast，会产生toast延迟
                    tips('播放中:' + JSON.stringify(obj));
                },
                onPlayPause: function (obj) {
                    tips('暂停:' + JSON.stringify(obj));
                },
                onPlayResume: function (obj) {
                    tips('恢复播放:' + JSON.stringify(obj));
                },
                onPlayEnd: function (obj) {
                    $('.replay-action').attr('src', '/ximalaya/img/replay-btn.png');
                    tips('播放结束:' + JSON.stringify(obj));
                }
            });
        },
        startTimer: function (cb) {
            this.timer = setInterval(function () {
                var text = $('.J-timer').text() * 1 - 1;
                if (text >= 0) {
                    $('.J-timer').text(text);
                } else {
                    cb && cb()
                }
            }, 1000)
        },
        stopTimer: function () {
            clearInterval(this.timer);
            $('.J-timer').text(60);
        }
    }
    var page = new Page();
</script>


<%- include("footer.ejs") %>