<%- include("header.ejs",{"title":'参赛篇目'}) %>

<div class='page recode-page active'>
    <div class="title">
        <%- doc.arName %>
    </div>
    <img src="/ximalaya/img/origin-play.png" class="J-music origin-play" />
    <div class="content">
        <%- doc.arText %>
    </div>
    <div class="actions">
        <img src="/ximalaya/img/record-btn.png" class="action recode-action">
        <img src="/ximalaya/img/palying-btn.png" class="action playing-action">
        <img src="/ximalaya/img/replay-btn.png" class="action action-group replay-action">
        <img src="/ximalaya/img/again-record-btn.png" class="action action-group bw again-action">
        <img src="/ximalaya/img/record-submit-btn.png" class="action action-group submit-action">
    </div>
    <div class="musicUrl" data-src="<%= doc.arRecord %>"></div>
</div>


<!-- debug -->
<div class='toolbar active'>
    <a href="http://ma.eldesign.cn/xmjssdk/demo.html">DEMO</a>
    <a href="javascript:window.location.reload();">刷新</a>
</div>
<script src="/xmjssdk/vconsole.min.js?v=16"></script>
<script>
    var vConsole = new VConsole();
</script>

<!-- 图片上传 -->
<!-- <input type="file" id="file"> -->
<script src="/javascripts/qiniu.min.js"></script>
<script>
    var token;
    $.ajax({
        type: 'get',
        url: '/qiniu/api/getToken',
        success: function (data) {
            if (data.status == 200) {
                token = data.data.uploadToken;
                console.log(token);
            } else {
                window.mPZ.toast(data.data);
            }
        },
        dataType: 'json'
    });
    $('#file').change(function (e) {
        var file = this.files[0]; //获取图片
        console.log(file);
        var observable = qiniu.upload(file, new Date() * 1, token, {}, {
            useCdnDomain: false,
            region: qiniu.region.z0
        })
        var subscription = observable.subscribe({
            next(res) {
                console.log(res);
            },
            error(err) {
                console.log(err);
            },
            complete(res) {
                console.log(res, 'complete');
            }
        }) // 上传开始
    })

    function Page() {
        this.init();
    }

    Page.prototype = {
        init: function () {
            this.initMusic();
            this.bindEvent();
        },
        bindEvent: function () {
            var me = this;
            $('.J-music').click(function (e) {
                if ($(this).hasClass('play')) {
                    me.stopMusic();
                } else {
                    me.playMusic();
                }
            })
        },
        initMusic: function () {
            var audioElement = this.audioElement = document.createElement('audio');
            audioElement.controls = true;
            audioElement.loop = false;
            audioElement.autoplay = false;
            audioElement.onended = function () {
                $('.J-music').removeClass('play');
            };

            var src = $('.musicUrl').data('src');
            audioElement.setAttribute('src', src);
            audioElement.load();
        },
        playMusic: function () {
            this.audioElement.play();
            $('.J-music').addClass('play');
        },
        stopMusic: function () {
            this.audioElement.pause();
            $('.J-music').removeClass('play');
        },
    }
    new Page();
</script>

<!-- xmly  SDK -->
<script src="/xmjssdk/xmjssdk.js?v=20"></script>
<script>
    function Page() {
        this.init();
        this.bindEvent();
        this.initYa(cb);
    }
    Page.prototype = {
        init: function () {
            var self = this;
            // 录音状态控制
            self.recordStatusCode = {
                READY: 0, // 准备
                RECORDING: 1, // 录音中
                PAUSED: 2, // 暂停录音
                STOP: 3, // 停止录音
                PLAYING: 4, // 播放
                PLAYPAUSED: 5, // 暂停播放
                PALYSTOP: 6, // 播放停止
                ERROR: 7 // 错误
            };
            self.recordStatusChange(self.recordStatusCode.READY);

        },
        bindEvent: function () {
            var self = this;
            $('.recode-action').click(function () {
                self.recordStatusChange(self.recordStatusCode.RECORDING);
            });
            $('.playing-action').click(function () {
                self.recordStatusChange(self.recordStatusCode.PALYSTOP);
            });
            $('.replay-action').click(function () {
                if (self.recordStatus == self.recordStatusCode.PLAYING) {
                    self.recordStatusChange(self.recordStatusCode.PLAYPAUSED);
                } else {
                    self.recordStatusChange(self.recordStatusCode.PLAYING);
                }
            })
            $('.again-action').click(function () {
                self.recordStatusChange(self.recordStatusCode.READY);
            })
        },
        initYa: function (cb) {
            var self = this;
            ya.ready(function () {
                cb && cb();
                ya.recorder.bind({
                    onPlayEnd: function (objStr) {

                    },
                    onPlayResume: function (objStr) {

                    }
                });
            });
        },
        recordStatusChange: function (recordStatus) {
            var recordStatusCode = this.recordStatusCode;
            this.recordStatus = recordStatus;
            switch (recordStatus) {
                case recordStatusCode.READY:
                    $('.recode-action').show().siblings().hide();
                    break;
                case recordStatusCode.RECORDING:
                    ya.recorder.startRecord(function () {
                        ya.toast('开始录音：');
                        $('.playing-action').show().siblings().hide();
                    });
                    break;
                case recordStatusCode.PLAYING:
                    if (!self.localId) {
                        ya.toast('请先录制一段音频！');
                        return false;
                    }
                    ya.recorder.playVoice(self.localId, function (localId) {
                        $('.replay-action').attr('src', '/ximalaya/img/replay-btn-2.png');
                    });
                    break;
                case recordStatusCode.PLAYPAUSED:
                    ya.recorder.stopVoice(self.localId, function (localId) {
                        $('.replay-action').attr('src', '/ximalaya/img/replay-btn.png');
                    });
                    break;
                case recordStatusCode.PALYSTOP:
                    ya.recorder.stopRecord(function (localId) {
                        self.localId = localId;
                        ya.toast('录音停止');
                        $('.action').hide();
                        $('.action-group').show();
                    });
                    break;
            }
        }
    }

    new Page();
</script>

<%- include("footer.ejs") %>